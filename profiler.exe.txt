
from login import api
import sys
import time
import platform
import os
import hashlib
from time import sleep
keyauthapp = api('razprofiler', '0t7nUkR1ZH', 'c8c0ddf41ce70b0d30999f4d790ad1adecbe5c0a756c10f94e44ab0348c5cc5f', '1.0', **('name', 'ownerid', 'secret', 'version'))

def answer():
    pass
# WARNING: Decompyle incomplete

answer()
from colorama.initialise import init
from update_check import update
from json import decoder
import threading
import time
import colorama
import treelib
import random
import sys
import os
import argparse
import json
import requests
import webbrowser
import string
from tqdm import tqdm
from treelib import Node, Tree
from colorama import Fore, Back, Style, init
from statistics import mean
init(True, **('autoreset',))
from modules import skype_search
from modules import copainsdavant_search
from modules import instagram_search
from modules import twitter_search
from modules import facebook_search
from modules import linkedin_search
from modules import dirigeants_bfmtv
from modules import death_records
from modules import pagesblanches_search
from modules import mail_gen
from modules import scylla_sh
from modules import mail_check
from modules import last_diplomes
from modules import soundcloud
from modules.visual import logging
from modules.api_modules import leakcheck_net
banner = False
data_file = open('modules/report.json', 'r')
data_export = json.load(data_file)
data_file.close()

def banner():
    if sys.platform == 'win32':
        os.system('cls')
    else:
        os.system('clear')
    print('\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\x80\xe2\xa3\x80\xe2\xa3\x80\xe2\xa3\x80\xe2\xa3\x80\xe2\xa3\x80\xe2\xa1\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\x80\xe2\xa3\xb4\xe2\xa0\xbe\xe2\xa0\x9b\xe2\xa2\x89\xe2\xa3\x89\xe2\xa3\x89\xe2\xa3\x89\xe2\xa1\x89\xe2\xa0\x9b\xe2\xa0\xb7\xe2\xa3\xa6\xe2\xa3\x84\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\x80\xe2\xa3\xb4\xe2\xa0\x8b\xe2\xa3\xa0\xe2\xa3\xb4\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa1\xbf\xe2\xa3\xbf\xe2\xa3\xb6\xe2\xa3\x8c\xe2\xa0\xb9\xe2\xa3\xb7\xe2\xa1\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\xbc\xe2\xa0\x81\xe2\xa3\xb4\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\x86\xe2\xa0\x89\xe2\xa0\xbb\xe2\xa3\xa7\xe2\xa0\x98\xe2\xa3\xb7\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\xb0\xe2\xa1\x87\xe2\xa2\xb0\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa1\xbf\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x88\xe2\xa0\x80\xe2\xa2\xb9\xe2\xa1\x87\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\xb8\xe2\xa1\x87\xe2\xa2\xb8\xe2\xa3\xbf\xe2\xa0\x9b\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa1\xbf\xe2\xa0\x83\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\xb8\xe2\xa1\x87\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x88\xe2\xa3\xb7\xe2\xa0\x80\xe2\xa2\xbf\xe2\xa1\x86\xe2\xa0\x88\xe2\xa0\x9b\xe2\xa0\xbb\xe2\xa0\x9f\xe2\xa0\x9b\xe2\xa0\x89\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\xbe\xe2\xa0\x83\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\xb8\xe2\xa3\xa7\xe2\xa1\x80\xe2\xa0\xbb\xe2\xa1\x84\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\x80\xe2\xa3\xbc\xe2\xa0\x83\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa2\xbc\xe2\xa0\xbf\xe2\xa3\xa6\xe2\xa3\x84\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\x80\xe2\xa3\xb4\xe2\xa0\x9f\xe2\xa0\x81\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\xa0\xe2\xa3\xbe\xe2\xa3\xbf\xe2\xa3\xa6\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x88\xe2\xa0\x89\xe2\xa0\x9b\xe2\xa0\x93\xe2\xa0\xb2\xe2\xa0\xb6\xe2\xa0\x96\xe2\xa0\x9a\xe2\xa0\x8b\xe2\xa0\x89\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\xa0\xe2\xa3\xbe\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa0\x9f\xe2\xa0\x81\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\xa0\xe2\xa3\xbe\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa0\x9f\xe2\xa0\x81\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa3\xbe\xe2\xa3\xbf\xe2\xa3\xbf\xe2\xa0\x9f\xe2\xa0\x81\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa2\x80\xe2\xa3\x84\xe2\xa0\x88\xe2\xa0\x9b\xe2\xa0\x81\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n                \xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x81\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\xe2\xa0\x80\n    ')
    print("        Get someone's digital identity anonymously \xf0\x9f\x91\xbb ")
    print('             Made by ' + Style.BRIGHT + Fore.RED + 'RAZ ' + Fore.RESET + Style.RESET_ALL + 'with \xf0\x9f\x92\x9d')

banner()
parser = argparse.ArgumentParser()
parser.add_argument('-n', '--name', 'Victim name', **('help',))
parser.add_argument('-ln', '--lastname', 'Last name of victim', **('help',))
parser.add_argument('-u', '--update', 'Update DaProfiler', **('help',))
parser.add_argument('-json', '--json', 'Print result in json', **('help',))
parser.add_argument('-zp', '--zp', 'Zip code (Optional)', **('help',))
args = parser.parse_args()
name = args.lastname
pren = args.name
do_upgrade = args.update
json_print = args.json
zip_code = args.zp

def randomString(length):
    return ''.join((lambda .0: pass# WARNING: Decompyle incomplete
)(range(length)))

thisIsATmpTokenListener = randomString(25)
logging.speculos_lotus()
possible_usernames = []
folder_name = '{}_{}'.format(pren, name)
personnal_life = []
social_medias = []
# WARNING: Decompyle incomplete
